{
  "filesystem": {
    "id": "filesystem",
    "name": "Filesystem",
    "description": "Read, write, and manage files on your local filesystem",
    "category": "Development",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem", "."],
      "connectionMode": "strict"
    },
    "setupInstructions": "No setup required. Works out of the box.",
    "tags": ["files", "local", "development", "essential"]
  },
  "puppeteer": {
    "id": "puppeteer",
    "name": "Puppeteer (Web Browser)",
    "description": "Automate web browsing, scraping, and interaction with websites",
    "category": "Web",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@truffle-ai/puppeteer-server"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "Automatically installs Puppeteer server. No additional setup required.",
    "tags": ["web", "browser", "automation", "scraping"]
  },
  "github": {
    "id": "github",
    "name": "GitHub",
    "description": "Interact with GitHub repositories, issues, and pull requests",
    "category": "Development",
    "config": {
      "type": "http",
      "url": "https://api.githubcopilot.com/mcp/",
      "connectionMode": "lenient"
    },
    "setupInstructions": "No setup required. Works out of the box.",
    "tags": ["git", "github", "development", "repositories"]
  },
  "terminal": {
    "id": "terminal",
    "name": "Terminal",
    "description": "Execute shell commands and interact with the terminal",
    "category": "System",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-terminal"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "No setup required. Provides safe terminal access.",
    "tags": ["terminal", "shell", "system", "commands"]
  },
  "sqlite": {
    "id": "sqlite",
    "name": "SQLite Database",
    "description": "Query and manage SQLite databases",
    "category": "Database",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sqlite"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "Provide database path as needed for your specific use case.",
    "tags": ["database", "sql", "sqlite", "data"]
  },
  "postgres": {
    "id": "postgres",
    "name": "PostgreSQL Database",
    "description": "Connect and query PostgreSQL databases",
    "category": "Database",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-postgres"],
      "env": {
        "POSTGRES_CONNECTION_STRING": "$POSTGRES_CONNECTION_STRING"
      },
      "connectionMode": "lenient"
    },
    "setupInstructions": "Requires PostgreSQL connection string. Format: postgresql://user:password@host:port/database",
    "requiredEnvVars": ["POSTGRES_CONNECTION_STRING"],
    "requiresSetup": true,
    "tags": ["database", "sql", "postgresql", "data"]
  },
  "everart": {
    "id": "everart",
    "name": "EverArt",
    "description": "Generate and manipulate images using EverArt API",
    "category": "AI Services",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-everart"],
      "env": {
        "EVERART_API_KEY": "$EVERART_API_KEY"
      },
      "connectionMode": "lenient"
    },
    "setupInstructions": "Requires EverArt API key. Sign up at: https://everart.ai/",
    "requiredEnvVars": ["EVERART_API_KEY"],
    "requiresSetup": true,
    "tags": ["ai", "images", "generation", "art"]
  },
  "brave_search": {
    "id": "brave_search",
    "name": "Brave Search",
    "description": "Search the web using Brave Search API",
    "category": "Web",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-brave-search"],
      "env": {
        "BRAVE_API_KEY": "$BRAVE_API_KEY"
      },
      "connectionMode": "lenient"
    },
    "setupInstructions": "Requires Brave Search API key. Get one at: https://api.search.brave.com/",
    "requiredEnvVars": ["BRAVE_API_KEY"],
    "requiresSetup": true,
    "tags": ["search", "web", "api", "information"]
  },
  "google_drive": {
    "id": "google_drive",
    "name": "Google Drive",
    "description": "Access and manage files in Google Drive",
    "category": "Productivity",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-google-drive"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "Requires Google Drive API credentials and OAuth setup.",
    "requiresSetup": true,
    "tags": ["cloud", "storage", "google", "productivity"]
  },
  "gdrive": {
    "id": "gdrive",
    "name": "Google Drive (Alternative)",
    "description": "Alternative Google Drive integration with different features",
    "category": "Productivity",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-gdrive"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "Alternative Google Drive server with different authentication flow.",
    "requiresSetup": true,
    "tags": ["cloud", "storage", "google", "productivity", "alternative"]
  },
  "slack": {
    "id": "slack",
    "name": "Slack",
    "description": "Send messages and interact with Slack workspaces",
    "category": "Productivity",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-slack"],
      "env": {
        "SLACK_BOT_TOKEN": "$SLACK_BOT_TOKEN"
      },
      "connectionMode": "lenient"
    },
    "setupInstructions": "Requires Slack Bot Token. Create a Slack app and generate a bot token.",
    "requiredEnvVars": ["SLACK_BOT_TOKEN"],
    "requiresSetup": true,
    "tags": ["communication", "messaging", "productivity", "slack"]
  },
  "memory": {
    "id": "memory",
    "name": "Memory",
    "description": "Persistent memory system for storing and retrieving information across sessions",
    "category": "System",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "No setup required. Provides persistent memory capabilities.",
    "tags": ["memory", "persistence", "system", "storage"]
  },
  "fetch": {
    "id": "fetch",
    "name": "Fetch (HTTP Client)",
    "description": "Make HTTP requests to external APIs and websites",
    "category": "Web",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-fetch"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "No setup required. Provides HTTP request capabilities.",
    "tags": ["http", "api", "web", "requests", "fetch"]
  },
  "everything": {
    "id": "everything",
    "name": "Everything Search",
    "description": "Search files on Windows using Everything search engine",
    "category": "System",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-everything"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "Windows only. Requires Everything search engine to be installed and running.",
    "requiresSetup": true,
    "tags": ["search", "files", "windows", "system"]
  },
  "sentry": {
    "id": "sentry",
    "name": "Sentry",
    "description": "Monitor and track errors with Sentry",
    "category": "Development",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sentry"],
      "env": {
        "SENTRY_AUTH_TOKEN": "$SENTRY_AUTH_TOKEN"
      },
      "connectionMode": "lenient"
    },
    "setupInstructions": "Requires Sentry authentication token. Get one from your Sentry project settings.",
    "requiredEnvVars": ["SENTRY_AUTH_TOKEN"],
    "requiresSetup": true,
    "tags": ["monitoring", "errors", "debugging", "development"]
  },
  "kubernetes": {
    "id": "kubernetes",
    "name": "Kubernetes",
    "description": "Manage and interact with Kubernetes clusters",
    "category": "DevOps",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-kubernetes"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "Requires kubectl to be configured with cluster access.",
    "requiresSetup": true,
    "tags": ["kubernetes", "k8s", "devops", "containers", "orchestration"]
  },
  "aws": {
    "id": "aws",
    "name": "AWS",
    "description": "Interact with Amazon Web Services",
    "category": "Cloud",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-aws"],
      "env": {
        "AWS_ACCESS_KEY_ID": "$AWS_ACCESS_KEY_ID",
        "AWS_SECRET_ACCESS_KEY": "$AWS_SECRET_ACCESS_KEY"
      },
      "connectionMode": "lenient"
    },
    "setupInstructions": "Requires AWS credentials. Configure AWS CLI or set environment variables.",
    "requiredEnvVars": ["AWS_ACCESS_KEY_ID", "AWS_SECRET_ACCESS_KEY"],
    "optionalEnvVars": ["AWS_REGION", "AWS_SESSION_TOKEN"],
    "requiresSetup": true,
    "tags": ["aws", "cloud", "amazon", "infrastructure"]
  },
  "docker": {
    "id": "docker",
    "name": "Docker",
    "description": "Manage Docker containers and images",
    "category": "DevOps",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-docker"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "Requires Docker to be installed and running.",
    "requiresSetup": true,
    "tags": ["docker", "containers", "devops", "deployment"]
  },
  "time": {
    "id": "time",
    "name": "Time & Date",
    "description": "Get current time, date, and timezone information",
    "category": "Utility",
    "config": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-time"],
      "connectionMode": "lenient"
    },
    "setupInstructions": "No setup required. Provides time and date utilities.",
    "tags": ["time", "date", "timezone", "utility"]
  }
} 